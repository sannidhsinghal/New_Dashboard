{"version":3,"sources":["components/GetData.js","components/Page.js","components/Home.js","components/FileUpload.js","componentss/Preview/PreviewSurvey.js","components/AddQuestion.js","components/CreateSurvey.js","componentss/dashboard/User.js","componentss/dashboard/MonthChart.js","componentss/dashboard/StatusChart.js","componentss/dashboard/Dashboard.js","components/ResponseDetails.js","components/ResponseTable.js","App.js","serviceWorker.js","index.js"],"names":["dataGet","url","axios","get","then","res","data","dataPost","post","Page","handleChange","event","setState","target","name","value","handleGender","gender","handleSubmit","preventDefault","user","fullName","state","fullname","userName","username","emailId","phoneNumber","contactNo","password","console","log","handleApi","userDetail","response","hasOwnProperty","isLogged","localStorage","setItem","id","catch","error","message","userId","this","to","pathname","window","onload","signUpButton","document","getElementById","signInButton","container","addEventListener","classList","add","remove","className","style","overflow","onSubmit","action","type","placeholder","onChange","FormControl","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","color","label","labelPlacement","href","onClick","React","Component","Home","surveys","getItem","marginTop","marginLeft","Card","CardActionArea","CardContent","Typography","gutterBottom","variant","textAlign","display","justifyContent","size","location","CardActions","Row","map","params","key","src","imagePath","width","height","margin","borderStyle","borderColor","Body","Title","Text","description","createdDt","slice","Button","survey","uploadImage","file","a","async","formData","FormData","append","headers","PreviewSurvey","props","setPreview","bind","surveyId","result","obj","itemType","title","TextField","fullWidth","disabled","option1","option2","option3","option4","option5","emptySymbol","initalRating","readonly","multiline","rows","queItem","JSON","parse","item","AddQuestion","isMandatory","ref_title","others","min_value","max_value","lower_limit","upper_limit","step_size","format","settings","handleModal","getQuestionFields","handleMandatory","createQuestion","setShow","helperText","select","MenuItem","itemTypeId","createdBy","stringify","Modal","show","onHide","Header","closeButton","checked","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","questionType","Footer","CreateSurvey","handleNext","activeStep","baseLanguage","categoryId","ensurePoints","isIpAllowed","keyPoints","createdById","singleResponseUser","approvalRequired","Name","categories","handleBack","handleIp","handleResponse","handleApproval","handleFile","setImage","e","files","position","align","category","length","top","left","Spinner","animation","Stepper","step","Step","StepLabel","getStepContent","User","flexDirection","Image","profilePicPath","rounded","streetAddress","city","country","pincode","MonthChart","responses","status","chartResponse","labels","statusResponse","months","Object","values","forEach","push","keys","objects","includes","parseInt","responseChartData","options","xaxis","dataLabels","enabled","markers","series","path","StatusChart","statusChartData","Dashboard","class","liveCount","draftCount","responseCount","marginRight","ResponseDetails","responseId","question","code","responseItem","alt","fullSymbol","fontSize","renderSwitch","ResponseTable","questions","questionIds","columns","filter","sort","isLoading","answers","rowData","toDetail","questionIdList","questionId","que","object","val","filterType","responsive","onRowClick","getDetail","onRowsDelete","disableToolbarSelect","App","navBar","data-color","data-background-color","data-image","Nav","Link","clear","basename","exact","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e093820e.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport function dataGet(url) {\r\n    return axios.get(`https://surveyglance.herokuapp.com/api/tache/facade`+url)\r\n    .then(res=> res.data)\r\n}\r\n\r\nexport function dataPost(url,data){\r\n    return axios.post(`https://surveyglance.herokuapp.com/api/tache/facade`+url,data)\r\n    .then(res=>res.data)\r\n}","import React,{Fragment} from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { dataPost } from \"./GetData\";\r\nimport { Redirect} from \"react-router-dom\"\r\nimport \"../Styles.css\";\r\n\r\n\r\nclass Page extends React.Component {\r\n  constructor(){\r\n    super()\r\n    this.state ={\r\n      username: \"\",\r\n      fullname: \"\",\r\n      emailId: \"\",\r\n      contactNo: \"\",\r\n      password: \"\",\r\n      gender: \"\",\r\n      isLogged: false,\r\n      error: \"\",\r\n      userId: \"\"\r\n    }\r\n  }\r\n\r\n  handleChange=(event)=>{\r\n    this.setState({\r\n      [event.target.name] : event.target.value,    \r\n    })\r\n  }\r\n \r\n\r\n  handleGender=(event)=>{\r\n    this.setState({\r\n      gender:event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit =(event)=>{\r\n    event.preventDefault();\r\n    const user = {\r\n      fullName: this.state.fullname,\r\n      userName: this.state.username,\r\n      emailId: this.state.emailId,\r\n      phoneNumber: this.state.contactNo,\r\n      password: this.state.password,\r\n      gender: this.state.gender\r\n    };\r\n    console.log(user)\r\n    dataPost(`/user/createUser`,user)\r\n    .then(res=>{\r\n      console.log(res);\r\n    });\r\n  }\r\n    \r\n  handleApi=event=>{\r\n    event.preventDefault();\r\n    const userDetail = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n      \r\n    };\r\n    console.log(userDetail)\r\n    dataPost('/user/login',userDetail)\r\n    .then(response=>{\r\n      if(response.hasOwnProperty('userName')){\r\n        console.log(\"dhdf\")\r\n        this.setState({\r\n          isLogged: true,\r\n        })\r\n        console.log(\"logged\")\r\n        localStorage.setItem('userId', response.id)\r\n      }\r\n    })\r\n    .catch(error=>{\r\n      this.setState({\r\n        error:error.response.data.message\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let alertBox=\"\"\r\n    // console.log('jf')\r\n    if(this.state.isLogged){\r\n      return(\r\n        <Redirect to ={{pathname:'/home',state:{\r\n          userId:this.state.userId\r\n        }}}></Redirect>\r\n      )\r\n    }\r\n  // const [value, setValue] = React.useState(\"female\");\r\n  // const handleChange = event => {\r\n  //   setValue(event.target.value);\r\n  // };\r\n      window.onload= function (){\r\n\r\n\r\n      const signUpButton = document.getElementById('signUp');\r\n      const signInButton = document.getElementById('signIn');\r\n      const container = document.getElementById('container');\r\n\r\n\t  signUpButton.addEventListener('click', () => {\r\n\t  container.classList.add(\"right-panel-active\");\r\n        });\r\n\r\n\r\n      signInButton.addEventListener('click', () => {\r\n\t  container.classList.remove(\"right-panel-active\");\r\n         });\r\n\r\n\r\n\r\n         }\r\n    return (\r\n      <Fragment>\r\n      <div className=\"one\" style={{overflow:\"hidden\"}}>\r\n        {/* <p>Survey</p> */}\r\n      \r\n        <h1 className=\"head\">Welcome To SurveyGlance ! </h1>\r\n        <div className=\"container\" id=\"container\" > \r\n     \r\n          <div className=\"form-container sign-up-container\">\r\n            <form onSubmit={this.handleSubmit} action=\"#\">\r\n              <h2>Create Account !</h2>\r\n              <input type=\"text\" name=\"fullname\" placeholder=\"Name\" onChange={this.handleChange}/>\r\n              <input type=\"email\" name=\"emailId\" placeholder=\"Email\" onChange={this.handleChange}/>\r\n              <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={this.handleChange}/>\r\n              <input type=\"number\" name=\"contactNo\" placeholder=\"Contact No.\" onChange={this.handleChange}/>\r\n              <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.handleChange} />\r\n\r\n              <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Gender: </FormLabel>\r\n                <RadioGroup\r\n                  aria-label=\"position\"\r\n                  name=\"position\"\r\n                >\r\n                  <FormControlLabel\r\n                    name=\"gender\"\r\n                    value=\"MALE\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Male\"\r\n                    labelPlacement=\"start\"\r\n                    onChange={this.handleGender}\r\n                  />\r\n                  <FormControlLabel\r\n                    name=\"gender\"\r\n                    value=\"FEMALE\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Female\"\r\n                    labelPlacement=\"start\"\r\n                    onChange={this.handleGender}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n\r\n              <button>Sign Up</button>\r\n            </form>\r\n          </div>\r\n          <div className=\"form-container sign-in-container\">\r\n            <form onSubmit={this.handleApi} action=\"#\">\r\n              <h1>Sign in !</h1>\r\n\r\n              <input type=\"username\" placeholder=\"Username\" name=\"username\" onChange={this.handleChange}/>\r\n              <input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={this.handleChange} />\r\n              <a href=\"#\">Forgot your password?</a>\r\n              <button onClick={this.handleApi}>Sign In</button>\r\n            </form>\r\n          </div>\r\n          <div className=\"overlay-container\">\r\n            <div className=\"overlay\">\r\n              <div className=\"overlay-panel overlay-left\">\r\n                <h1>Welcome Back!</h1>\r\n                <p>\r\n                  To keep connected with us please login with your personal info\r\n                </p>\r\n                <button className=\"ghost\" id=\"signIn\" >\r\n                  Sign In\r\n                </button>\r\n              </div>\r\n              <div className=\"overlay-panel overlay-right\">\r\n                <h1>Hello, Friend!</h1>\r\n                <p>Enter your personal details and start journey with us</p>\r\n                <button className=\"ghost\" id=\"signUp\">\r\n                  Sign Up\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page;\r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { dataGet } from \"./GetData\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      surveys: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    dataGet(\"/survey/surveys/\" + localStorage.getItem(\"userId\"))\r\n      .then(response => {\r\n        this.setState({\r\n          surveys: response\r\n        });\r\n        console.log(this.state.surveys);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"col-md-9\"\r\n          style={{ marginTop: \"10px\", marginLeft: \"15%\" }}\r\n        >\r\n          <Card>\r\n            <CardActionArea>\r\n              <CardContent>\r\n                <Typography\r\n                  gutterBottom\r\n                  variant=\"h4\"\r\n                  component=\"h2\"\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  Create Survey !\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  color=\"textSecondary\"\r\n                  component=\"p\"\r\n                  style={{ textAlign: \"center\" }}\r\n                >\r\n                  Create customized surveys\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                // className={classes.button}\r\n               \r\n                onClick={event => (window.location.href = \"/createSurvey\")}\r\n              >\r\n                CREATE\r\n              </button>\r\n            </div>\r\n            <CardActions />\r\n          </Card>\r\n        </div>\r\n        <Row>\r\n          {this.state.surveys.map(params => {\r\n            return (\r\n              <div className=\"col-md-4\" key={params.id}>\r\n                <Card key={params.id}>\r\n                  <img\r\n                    src={params.imagePath}\r\n                    style={{\r\n                      width: \"250px\",\r\n                      height: \"220px\",\r\n                      display: \"block\",\r\n                      margin: \"0 auto\",\r\n                      marginTop: \"20px\",\r\n                      borderStyle: \"solid\",\r\n                      borderColor: \"grey\"\r\n                    }}\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title\r\n                      style={{ textAlign: \"center\", color: \"purple\" }}\r\n                    >\r\n                      <b>{params.name}</b>\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                      <div style={{ textAlign: \"center\" }}>\r\n                        {params.description}\r\n                      </div>\r\n                    </Card.Text>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                      <label>Created On:</label>\r\n                      {\"   \"}\r\n                      {params.createdDt.slice(0, 10)}\r\n                    </div>\r\n                  </Card.Body>\r\n                  <Button>\r\n                    <Link\r\n                      to={{\r\n                        pathname: \"/response\",\r\n                        state: {\r\n                          survey: params\r\n                        }\r\n                      }}\r\n                    >\r\n                      <center>\r\n                        <button>Responses</button>\r\n                      </center>\r\n                    </Link>\r\n                  </Button>\r\n                </Card>\r\n              </div>\r\n            );\r\n          })}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import axios from 'axios';\r\n\r\n\r\nexport  async function uploadFile(file,surveyId,userId){  \r\n    const formData = new FormData();\r\n    formData.append('file',file)\r\n    console.log(formData)\r\n\r\n    return  await axios.post('https://surveyglance.herokuapp.com/api/tache/facade/question/upload/excel?surveyId='+surveyId+'&userId='+userId,\r\n     formData,{\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n          }\r\n        );\r\n    }\r\n\r\n\r\nexport async function uploadImage(file){\r\n\r\n        const formData = new FormData();\r\n        formData.append('file',file)\r\n        console.log(formData)\r\n        return  await axios.post('https://surveyglance.herokuapp.com/api/tache/facade/response/upload/image', \r\n        formData,{\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n          }\r\n        );\r\n      }\r\n","import React,{Component} from 'react'\r\nimport {dataGet} from '../../components/GetData.js'\r\nimport {TextField,Card} from '@material-ui/core'\r\nimport Rating from \"react-rating\";\r\n\r\n\r\n\r\nclass PreviewSurvey extends Component{\r\n    constructor(props){\r\n        super();\r\n        this.state={\r\n         data:[]\r\n        }\r\n        this.setPreview=this.setPreview.bind(this)\r\n        }\r\n    \r\ncomponentDidMount(){\r\n        dataGet(\"/survey/getquestions?surveyId=\"+this.props.surveyId)\r\n            .then(result=>{\r\n           this.setState({\r\n               data:result \r\n           })\r\n           console.log(this.state.obj)           \r\n        })\r\n    }\r\n\r\n\r\n  setPreview(params){\r\n      console.log(params)\r\n      switch(params.itemType){\r\n\r\n        case \"Text\":\r\n            console.log(\"component called\")\r\n            return(\r\n                <>\r\n                <b>Q.{params.title}</b><br/>\r\n                <TextField fullWidth disabled></TextField>\r\n               </>\r\n            );\r\n        \r\n        case \"Media\":\r\n            return(\r\n                <>\r\n                <b>Q.{params.title}</b>\r\n                <input type =\"file\" fullWidth></input>\r\n                </>\r\n            );\r\n        \r\n        case \"MCQ\":\r\n            return(\r\n                <>\r\n                <b>Q.{params.title}</b>\r\n                <input type =\"checkbox\">{params.option1}</input>\r\n                <input type =\"checkbox\">{params.option2}</input>\r\n                <input type =\"checkbox\">{params.option3}</input>\r\n                <input type =\"checkbox\">{params.option4}</input>\r\n                <input type =\"checkbox\">{params.option5}</input>\r\n                </>\r\n            )    \r\n\r\n            case \"SCQ\":\r\n                return(\r\n                    <>\r\n                    <b>Q.{params.title}</b>\r\n                    <input type=\"radio\" >{params.option1}</input>\r\n                    <input type=\"radio\" >{params.option2}</input>\r\n                    <input type=\"radio\" >{params.option3}</input>\r\n                    <input type=\"radio\" >{params.option4}</input>\r\n                    <input type=\"radio\" >{params.option5}</input>\r\n                    </>\r\n                )\r\n        case \"Bar_Code\":\r\n            return(\r\n                <>\r\n                <b>Q.{params.title}</b>\r\n                <img src =\"https://surveyglance.s3.us-east-2.amazonaws.com/bar code_20200315113834.jpg\"\r\n                height=\"300\"\r\n                ></img><br/>\r\n                </>\r\n            )\r\n        case \"Rating\":\r\n            return(\r\n                <>\r\n                <b>Q.{params.title}</b>\r\n                <Rating\r\n                emptySymbol=\"fa fa-star-o fa-2x\"\r\n                initalRating=\"0\"\r\n                readonly\r\n              />\r\n                </>\r\n            );                 \r\n\r\n        case \"File_Upload\":\r\n            return(\r\n                <>\r\n                <b>Q.{params.title}</b>\r\n                <input type =\"file\" fullWidth></input>\r\n                </>\r\n            ); \r\n        \r\n        case \"Signature\":\r\n            return(\r\n                <>\r\n                <b>Q.{params.title}</b><br/>\r\n                <TextField fullWidth disabled multiline rows=\"5\"></TextField>\r\n                </>\r\n            );\r\n            \r\n        case \"Email\":\r\n            return(\r\n                <>\r\n                <b>Q.{params.title}</b><br/>\r\n                <TextField fullWidth disabled></TextField>\r\n                </>\r\n            );\r\n        \r\n        case \"Number\":\r\n            return(\r\n                <>\r\n                <b>Q.{params.title}</b><br/>\r\n                <input type =\"number\" fullWidth disabled></input>\r\n                </>\r\n            )    \r\n\r\n\r\n      }\r\n  }  \r\n        \r\nrender(){\r\n    return(\r\n    <>\r\n              <div className=\"card-header card-header-primary\">\r\n        <div style={{marginTop:\"5px\" }}>\r\n           <h1 className=\"card-title\" style={{textAlign:\"center\"}}>{this.props.Title}</h1> \r\n            </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n             <div className=\"row\">\r\n            {this.state.data.map(res=>{  \r\n                var queItem = JSON.parse(res.item)\r\n                return(\r\n                <>    \r\n                {this.setPreview(queItem)}\r\n                <br/>\r\n                </>\r\n                )\r\n            }\r\n    )}\r\n        \r\n    {/* <button style={{display:\"flex\", margin:\"auto\"}} type=\"submit\"> Next</button> */}\r\n    </div>\r\n    </div>\r\n    </>\r\n    )\r\n}}\r\n\r\n    \r\n\r\nexport default PreviewSurvey\r\n\r\n","import React, { Component } from \"react\";\r\nimport { MenuItem, TextField } from \"@material-ui/core\";\r\nimport { Card, Button, Modal } from \"react-bootstrap\";\r\nimport { dataPost, dataGet } from \"./GetData\";\r\nimport Switch from \"react-switch\";\r\n\r\nclass AddQuestion extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isMandatory: false,\r\n      itemType: \"\",\r\n      title: \"\",\r\n      ref_title: \"\",\r\n      description: \"\",\r\n      others: \"\",\r\n      item: {},\r\n      option1: \"\",\r\n      option2: \"\",\r\n      option3: \"\",\r\n      option4: \"\",\r\n      option5: \"\",\r\n      min_value: \"\",\r\n      max_value: \"\",\r\n      lower_limit: \"\",\r\n      upper_limit: \"\",\r\n      step_size: \"\",\r\n      format: \"\",\r\n      type: \"\",\r\n      settings: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleModal = this.handleModal.bind(this);\r\n    this.getQuestionFields = this.getQuestionFields.bind(this);\r\n    this.handleMandatory = this.handleMandatory.bind(this);\r\n    this.createQuestion = this.createQuestion.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleMandatory(isMandatory) {\r\n    this.setState({ isMandatory });\r\n  }\r\n\r\n  handleModal() {\r\n    this.setState({\r\n      setShow: !this.state.setShow\r\n    });\r\n  }\r\n\r\n  getQuestionFields(params) {\r\n    switch (params) {\r\n      case \"MCQ\":\r\n        return (\r\n          <>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"option 1\"\r\n              fullWidth\r\n              name=\"option1\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"option 2\"\r\n              fullWidth\r\n              name=\"option2\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"option 3\"\r\n              fullWidth\r\n              name=\"option3\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"option 4\"\r\n              fullWidth\r\n              name=\"option4\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"option 5\"\r\n              fullWidth\r\n              name=\"option5\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n          </>\r\n        );\r\n      case \"Text\":\r\n        return <></>;\r\n      case \"SCQ\":\r\n        return (\r\n          <>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"option 1\"\r\n              fullWidth\r\n              name=\"option1\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"option 2\"\r\n              fullWidth\r\n              name=\"option2\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"option 3\"\r\n              fullWidth\r\n              name=\"option3\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"option 4\"\r\n              fullWidth\r\n              name=\"option4\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"option 5\"\r\n              fullWidth\r\n              name=\"option5\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n          </>\r\n        );\r\n      case \"Bar_Code\":\r\n        return <></>;\r\n      case \"Signature\":\r\n        return <></>;\r\n      case \"Email\":\r\n        return <></>;\r\n      case \"File_Upload\":\r\n        return <></>;\r\n      case \"Rating\":\r\n        return <></>;\r\n\r\n      case \"Media\":\r\n        return (\r\n          <>\r\n            <TextField\r\n              name=\"format\"\r\n              helperText=\"Please select a format\"\r\n              onChange={this.handleChange}\r\n              select\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"image\">Image</MenuItem>\r\n              <MenuItem value=\"audio\">Audio</MenuItem>\r\n              <MenuItem value=\"video\">Video</MenuItem>\r\n            </TextField>\r\n          </>\r\n        );\r\n      case \"Number\":\r\n        return (\r\n          <>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"Lower Limit\"\r\n              fullWidth\r\n              name=\"lower_limit\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"Upper Limit\"\r\n              fullWidth\r\n              name=\"upper_limit\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n          </>\r\n        );\r\n\r\n      case \"Location\":\r\n        return (\r\n          <>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"Location Settings\"\r\n              fullWidth\r\n              name=\"settings\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n          </>\r\n        );\r\n\r\n      case \"Likart_Scale\":\r\n        return (\r\n          <>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"Option 1\"\r\n              fullWidth\r\n              name=\"option1\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"Option 2\"\r\n              fullWidth\r\n              name=\"option2\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"Option 3\"\r\n              fullWidth\r\n              name=\"option3\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n          </>\r\n        );\r\n      case \"Scale\":\r\n        return (\r\n          <>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"Minimum Value\"\r\n              fullWidth\r\n              name=\"min_value\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"Maximum Value\"\r\n              fullWidth\r\n              name=\"max_value\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n            <br />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              placeholder=\"Step Size\"\r\n              fullWidth\r\n              name=\"step_size\"\r\n              onChange={this.handleChange}\r\n            ></TextField>\r\n          </>\r\n        );\r\n      case \"Date_Time\":\r\n        return (\r\n          <>\r\n            <label>Please select the format</label>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              select\r\n              name=\"format\"\r\n              onChange={this.handleChange}\r\n            >\r\n              <br />\r\n              <MenuItem value=\"yyyy MM dd\">yyyy MM dd</MenuItem>\r\n              <MenuItem value=\"MM dd yyyy\">MM dd yyyy</MenuItem>\r\n              <MenuItem value=\"M dd yyyy\">M dd yyyy</MenuItem>\r\n              <MenuItem value=\"yyyy MM dd HH:mm:ss Z\">\r\n                yyyy MM dd HH:mm:ss Z\r\n              </MenuItem>\r\n              <MenuItem value=\"yyyy MM dd HH:mm\t\">yyyy MM dd HH:mm</MenuItem>\r\n            </TextField>\r\n            <br />\r\n            <label>Please select type</label>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              select\r\n              name=\"type\"\r\n              onChange={this.handleChange}\r\n            >\r\n              <br />\r\n              <MenuItem value=\"DATE\">Date</MenuItem>\r\n              <MenuItem value=\"DATE-TIME\">Date-Time</MenuItem>\r\n              <MenuItem value=\"TIME\">Time</MenuItem>\r\n            </TextField>\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  createQuestion(params) {\r\n    let item = {};\r\n    let itemTypeId = 0;\r\n    switch (params) {\r\n      case \"Text\":\r\n        itemTypeId = 3;\r\n        item[\"title\"] = this.state.title;\r\n        item[\"ref_title\"] = this.state.ref_title;\r\n        item[\"description\"] = this.state.description;\r\n        item[\"others\"] = this.state.others;\r\n        item[\"mandatory\"] = this.state.isMandatory;\r\n        break;\r\n\r\n      case \"Signature\":\r\n        itemTypeId = 8;\r\n        item[\"title\"] = this.state.title;\r\n        item[\"ref_title\"] = this.state.ref_title;\r\n        item[\"description\"] = this.state.description;\r\n        item[\"others\"] = this.state.others;\r\n        item[\"mandatory\"] = this.state.isMandatory;\r\n        break;\r\n\r\n      case \"Email\":\r\n        itemTypeId = 7;\r\n        item[\"title\"] = this.state.title;\r\n        item[\"ref_title\"] = this.state.ref_title;\r\n        item[\"description\"] = this.state.description;\r\n        item[\"others\"] = this.state.others;\r\n        item[\"mandatory\"] = this.state.isMandatory;\r\n        break;\r\n\r\n      case \"Likart_Scale\":\r\n        itemTypeId = 11;\r\n        item[\"title\"] = this.state.title;\r\n        item[\"ref_title\"] = this.state.ref_title;\r\n        item[\"description\"] = this.state.description;\r\n        item[\"others\"] = this.state.others;\r\n        item[\"mandatory\"] = this.state.isMandatory;\r\n        item[\"option1\"] = this.state.option1;\r\n        item[\"option2\"] = this.state.option2;\r\n        item[\"option3\"] = this.state.option3;\r\n        break;\r\n\r\n      case \"File_Upload\":\r\n        itemTypeId = 10;\r\n        item[\"title\"] = this.state.title;\r\n        item[\"ref_title\"] = this.state.ref_title;\r\n        item[\"description\"] = this.state.description;\r\n        item[\"others\"] = this.state.others;\r\n        item[\"mandatory\"] = this.state.isMandatory;\r\n        break;\r\n\r\n      case \"Rating\":\r\n        itemTypeId = 13;\r\n        item[\"title\"] = this.state.title;\r\n        item[\"ref_title\"] = this.state.ref_title;\r\n        item[\"description\"] = this.state.description;\r\n        item[\"others\"] = this.state.others;\r\n        item[\"mandatory\"] = this.state.isMandatory;\r\n        break;\r\n\r\n      case \"SCQ\":\r\n        itemTypeId = 2;\r\n        item[\"title\"] = this.state.title;\r\n        item[\"ref_title\"] = this.state.ref_title;\r\n        item[\"description\"] = this.state.description;\r\n        item[\"others\"] = this.state.others;\r\n        item[\"mandatory\"] = this.state.isMandatory;\r\n        break;\r\n\r\n      case \"Bar_Code\":\r\n        itemTypeId = 9;\r\n        item[\"title\"] = this.state.title;\r\n        item[\"ref_title\"] = this.state.ref_title;\r\n        item[\"description\"] = this.state.description;\r\n        item[\"others\"] = this.state.others;\r\n        item[\"mandatory\"] = this.state.isMandatory;\r\n        item[\"option1\"] = this.state.option1;\r\n        item[\"option2\"] = this.state.option2;\r\n        item[\"option3\"] = this.state.option3;\r\n        item[\"option4\"] = this.state.option4;\r\n        item[\"option5\"] = this.state.option5;\r\n        break;\r\n\r\n      case \"MCQ\":\r\n        itemTypeId = 1;\r\n        item[\"title\"] = this.state.title;\r\n        item[\"ref_title\"] = this.state.ref_title;\r\n        item[\"description\"] = this.state.description;\r\n        item[\"others\"] = this.state.others;\r\n        item[\"mandatory\"] = this.state.isMandatory;\r\n        item[\"option1\"] = this.state.option1;\r\n        item[\"option2\"] = this.state.option2;\r\n        item[\"option3\"] = this.state.option3;\r\n        item[\"option4\"] = this.state.option4;\r\n        item[\"option5\"] = this.state.option5;\r\n        break;\r\n\r\n      case \"Number\":\r\n        itemTypeId = 4;\r\n        item[\"title\"] = this.state.title;\r\n        item[\"ref_title\"] = this.state.ref_title;\r\n        item[\"description\"] = this.state.description;\r\n        item[\"others\"] = this.state.others;\r\n        item[\"mandatory\"] = this.state.isMandatory;\r\n        item[\"lower_limit\"] = this.state.lower_limit;\r\n        item[\"upper_limit\"] = this.state.upper_limit;\r\n        break;\r\n\r\n      case \"Media\":\r\n        itemTypeId = 14;\r\n        item[\"title\"] = this.state.title;\r\n        item[\"ref_title\"] = this.state.ref_title;\r\n        item[\"description\"] = this.state.description;\r\n        item[\"others\"] = this.state.others;\r\n        item[\"mandatory\"] = this.state.isMandatory;\r\n        item[\"format\"] = this.state.format;\r\n        break;\r\n\r\n      case \"Location\":\r\n        itemTypeId = 6;\r\n        item[\"title\"] = this.state.title;\r\n        item[\"ref_title\"] = this.state.ref_title;\r\n        item[\"description\"] = this.state.description;\r\n        item[\"others\"] = this.state.others;\r\n        item[\"mandatory\"] = this.state.isMandatory;\r\n        item[\"settings\"] = this.state.settings;\r\n        break;\r\n\r\n      case \"Date_Time\":\r\n        itemTypeId = 5;\r\n        item[\"title\"] = this.state.title;\r\n        item[\"ref_title\"] = this.state.ref_title;\r\n        item[\"description\"] = this.state.description;\r\n        item[\"others\"] = this.state.others;\r\n        item[\"mandatory\"] = this.state.isMandatory;\r\n        item[\"format\"] = this.state.format;\r\n        break;\r\n\r\n      case \"Scale\":\r\n        itemTypeId = 12;\r\n        item[\"title\"] = this.state.title;\r\n        item[\"ref_title\"] = this.state.ref_title;\r\n        item[\"description\"] = this.state.description;\r\n        item[\"others\"] = this.state.others;\r\n        item[\"mandatory\"] = this.state.isMandatory;\r\n        item[\"min_value\"] = this.state.min_value;\r\n        item[\"max_value\"] = this.state.max_value;\r\n        item[\"step_size\"] = this.state.step_size;\r\n        break;\r\n    }\r\n\r\n    let question = {\r\n      createdBy: 1,\r\n      description: this.state.description,\r\n      isMandatory: this.state.isMandatory,\r\n      itemTypeId: itemTypeId,\r\n      surveyId: this.props.surveyId,\r\n      item: JSON.stringify(item)\r\n    };\r\n    dataPost(\"/question/addQuestionToSurvey\", question).then(response => {\r\n      console.log(response);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const questionTypes = [\r\n      \"MCQ\",\r\n      \"SCQ\",\r\n      \"Text\",\r\n      \"Number\",\r\n      \"Date_Time\",\r\n      \"Location\",\r\n      \"Email\",\r\n      \"Signature\",\r\n      \"Bar_Code\",\r\n      \"File_Upload\",\r\n      \"Likart_Scale\",\r\n      \"Scale\",\r\n      \"Rating\",\r\n      \"Media\"\r\n    ];\r\n    return (\r\n      <div>\r\n        <center>\r\n          <Button onClick={this.handleModal}>Add Question</Button>\r\n          <Modal show={this.state.setShow} onHide={this.handleModal}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Add Question</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                placeholder=\"Title\"\r\n                name=\"title\"\r\n                fullWidth\r\n                onChange={this.handleChange}\r\n              ></TextField>\r\n              <br />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                placeholder=\"Description\"\r\n                fullWidth\r\n                name=\"description\"\r\n                onChange={this.handleChange}\r\n              ></TextField>\r\n              <br />\r\n              <label>\r\n                <b>Should the question be mandatory</b>\r\n              </label>\r\n              <Switch\r\n                name=\"isMandatory\"\r\n                onChange={this.handleMandatory}\r\n                checked={this.state.isMandatory}\r\n                onColor=\"#bf8300\"\r\n                onHandleColor=\"#ffff\"\r\n                handleDiameter={20}\r\n                uncheckedIcon={false}\r\n                checkedIcon={false}\r\n                boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                height={15}\r\n                width={45}\r\n              />\r\n              <br />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                placeholder=\"Reference Title\"\r\n                name=\"ref_title\"\r\n                onChange={this.handleChange}\r\n              ></TextField>\r\n              <br />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                placeholder=\"Others\"\r\n                name=\"others\"\r\n                onChange={this.handleChange}\r\n              ></TextField>\r\n              <br />\r\n              <label>\r\n                <b>Please select the question type</b>\r\n              </label>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                select\r\n                name=\"itemType\"\r\n                onChange={this.handleChange}\r\n                value={this.state.itemType}\r\n              >\r\n                {questionTypes.map(questionType => (\r\n                  <MenuItem key={questionType} value={questionType}>\r\n                    {questionType}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <br />\r\n\r\n              {this.getQuestionFields(this.state.itemType)}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={() => this.createQuestion(this.state.itemType)}\r\n              >\r\n                Add\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddQuestion;\r\n","import React, { Component } from \"react\";\r\nimport { Stepper, Step, StepLabel, MenuItem } from \"@material-ui/core\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Card, Button} from \"react-bootstrap\";\r\nimport { dataPost, dataGet } from \"./GetData\";\r\nimport Switch from \"react-switch\";\r\nimport { uploadFile, uploadImage } from \"./FileUpload\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PreviewSurvey from \"../componentss/Preview/PreviewSurvey\";\r\nimport AddQuestion from \"./AddQuestion\";\r\n\r\nclass CreateSurvey extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      baseLanguage: \"\",\r\n      categoryId: 0,\r\n      description: \"\",\r\n      ensurePoints: \"\",\r\n      isIpAllowed: false,\r\n      keyPoints: \"\",\r\n      name: \"\",\r\n      singleResponseUser: false,\r\n      approvalRequired: false,\r\n      activeStep: 2,\r\n      data: [],\r\n      categories: [],\r\n      imagePath: \"\",\r\n      file: null,\r\n      surveyId: \"\",\r\n      itemType: \"\",\r\n      setShow: false,\r\n      isMandatory: false,\r\n    };\r\n    this.handleNext = this.handleNext.bind(this);\r\n    this.handleBack = this.handleBack.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleIp = this.handleIp.bind(this);\r\n    this.handleResponse = this.handleResponse.bind(this);\r\n    this.handleApproval = this.handleApproval.bind(this);\r\n    this.handleFile = this.handleFile.bind(this);\r\n    this.setImage = this.setImage.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    dataGet(\"/surveyCategory/getAllSurveyCategory\").then(response => {\r\n      this.setState({\r\n        categories: response\r\n      });\r\n    });\r\n  }\r\n\r\n  handleNext() {\r\n    this.setState({\r\n      activeStep: this.state.activeStep + 1\r\n    });\r\n  }\r\n\r\n  handleBack() {\r\n    this.setState({\r\n      activeStep: this.state.activeStep - 1\r\n    });\r\n  }\r\n\r\n  handleModal() {\r\n    this.setState({\r\n      setShow: !this.state.setShow\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n  handleResponse(singleResponseUser) {\r\n    this.setState({ singleResponseUser });\r\n  }\r\n  handleIp(isIpAllowed) {\r\n    this.setState({ isIpAllowed });\r\n  }\r\n\r\n  handleApproval(approvalRequired) {\r\n    this.setState({ approvalRequired });\r\n  }\r\n\r\n \r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.handleNext(this.state.activeStep);\r\n    const survey = {\r\n      baseLanguage: \"English\",\r\n      categoryId: this.state.categoryId,\r\n      description: this.state.description,\r\n      ensurePoints: this.state.ensurePoints,\r\n      isIpAllowed: this.state.isIpAllowed,\r\n      keyPoints: this.state.keyPoints,\r\n      name: this.state.name,\r\n      createdById: localStorage.getItem(\"userId\"),\r\n      singleResponseUser: this.state.singleResponseUser,\r\n      approvalRequired: this.state.approvalRequired,\r\n      imagePath: this.state.imagePath\r\n    };\r\n    console.log(survey);\r\n    dataPost(`/survey/createSurvey`, survey).then(res => {\r\n      this.setState({\r\n        data: res,\r\n        surveyId: res.id,\r\n        Name: res.name\r\n      });\r\n      console.log(res);\r\n      console.log(res.data);\r\n    });\r\n  };\r\n\r\n  handleFile(e) {\r\n    this.setState({ file: e.target.files[0] });\r\n  }\r\n\r\n  async setImage() {\r\n    var url = await uploadImage(this.state.file);\r\n    console.log(url);\r\n    this.setState({\r\n      imagePath: url.data\r\n    });\r\n    console.log(this.state.imagePath);\r\n  }\r\n\r\n  getStepContent(params) {\r\n    switch (params) {\r\n      case 0:\r\n        return (\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid\" style={{ position: \"relative\" }}>\r\n              <div className=\"row \">\r\n                <label>Name: </label>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  name=\"name\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <label>Language : </label>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  name=\"baseLanguage\"\r\n                  align=\"right\"\r\n                  onChange={this.handleChange}\r\n                  value=\"English\"\r\n                />\r\n                <br />\r\n                <label>Category: </label>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  select\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  value={this.state.categoryId}\r\n                  name=\"categoryId\"\r\n                  onChange={this.handleChange}\r\n                  helperText=\"Please select a category\"\r\n                >\r\n                  {this.state.categories.map(category => (\r\n                    <MenuItem key={category.id} value={category.id}>\r\n                      {category.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n                <br />\r\n                <label>Ensure Points:</label>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  multiline\r\n                  rows=\"4\"\r\n                  name=\"ensurePoints\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <label>Key Instructions:</label>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  multiline\r\n                  rows=\"4\"\r\n                  name=\"keyPoints\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <label>Description:</label>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  multiline\r\n                  rows=\"4\"\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <label>Upload banner for the survey(optional)</label>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  type=\"file\"\r\n                  onChange={this.handleFile}\r\n                />\r\n                <Button variant=\"login_btn\" onClick={this.setImage}>\r\n                  Upload\r\n                </Button>\r\n                <br />\r\n                <label>Should one user fill the survey once only</label>\r\n                <Switch\r\n                  name=\"singleResponseUser\"\r\n                  onChange={this.handleResponse}\r\n                  checked={this.state.singleResponseUser}\r\n                  onColor=\"#bf8300\"\r\n                  onHandleColor=\"#ffff\"\r\n                  handleDiameter={20}\r\n                  uncheckedIcon={false}\r\n                  checkedIcon={false}\r\n                  boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                  activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                  height={15}\r\n                  width={45}\r\n                />\r\n                <br />\r\n                <span>Do you want to capture the IP address</span>\r\n                <Switch\r\n                  name=\"isIpAllowed\"\r\n                  onChange={this.handleIp}\r\n                  checked={this.state.isIpAllowed}\r\n                  onColor=\"#bf8300\"\r\n                  onHandleColor=\"#ffff\"\r\n                  handleDiameter={20}\r\n                  uncheckedIcon={false}\r\n                  checkedIcon={false}\r\n                  boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                  activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                  height={15}\r\n                  width={45}\r\n                />\r\n                <br />\r\n                <span>\r\n                  Do you want to approve the user for filling the survey\r\n                </span>\r\n                <Switch\r\n                  name=\"approvalRequired\"\r\n                  onChange={this.handleApproval}\r\n                  checked={this.state.approvalRequired}\r\n                  onColor=\"#bf8300\"\r\n                  onHandleColor=\"#ffff\"\r\n                  handleDiameter={20}\r\n                  uncheckedIcon={false}\r\n                  checkedIcon={false}\r\n                  boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                  activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                  height={15}\r\n                  width={45}\r\n                />\r\n                <br />\r\n                <Button\r\n                  variant=\"login_btn\"\r\n                  align=\"right\"\r\n                  type=\"submit\"\r\n                  onClick={this.handleSubmit}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 1:\r\n     if(this.state.data.length!==0){\r\n        return(\r\n          <AddQuestion\r\n          surveyId={this.state.data.id}\r\n          />\r\n        )\r\n     }\r\n      //   <div>\r\n      //   <center>\r\n      //  <p> Please upload the excel containing the questions</p>\r\n      //     <div style={{marginTop:\"200px\"}}>\r\n      //     <TextField type=\"file\" onChange={this.handleFile}/>\r\n      //     <Button variant=\"login_btn\" onClick={() =>uploadFile(this.state.file,this.state.data.id,this.state.data.createdById)}>Upload</Button>\r\n      //     <Button variant=\"login_btn\" onClick={this.handleBack}>Back</Button>\r\n      //     <Button variant=\"login_btn\" onClick={this.handleNext}>\r\n      //       Next\r\n      //     </Button>\r\n      //     </div>\r\n      //     </center>\r\n      //   </div>\r\n      // )}\r\n\r\n      else{\r\n        return(\r\n        <div\r\n        style={{ position: \"fixed\", top: \"50%\", left: \"50%\" }}\r\n        className=\"d-flex flex-column align-items-center justify-content-center\"\r\n      >\r\n        <Spinner animation=\"grow\" variant=\"warning\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </div>)\r\n      }\r\n\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <PreviewSurvey id={this.state.surveyId} Title={this.state.data.name} />\r\n            <Button onClick={this.handleNext}>Next</Button>\r\n            <Button onClick={this.handleBack}>Back</Button>\r\n          </div>\r\n        );\r\n\r\n      case 3:\r\n        return (\r\n          <div>\r\n            <Button onClick={this.handleBack}>Back</Button>\r\n            <Link to=\"/home\">\r\n              <Button>GO TO HOME SCREEN</Button>\r\n            </Link>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    var steps = [\"Enter Basic Details\", \"Add Questions\", \"Preview\",\"Publish\"];\r\n\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"container-fluid\">\r\n          <div\r\n            className=\"row \"\r\n            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <Card>\r\n              <Card.Body className=\"p-4\">\r\n                <Stepper activeStep={this.state.activeStep}>\r\n                  {steps.map(step => {\r\n                    return (\r\n                      <Step>\r\n                        <StepLabel>{step}</StepLabel>\r\n                      </Step>\r\n                    );\r\n                  })}\r\n                </Stepper>\r\n                {this.getStepContent(this.state.activeStep)}\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CreateSurvey;\r\n","import React,{Component} from \"react\";\r\nimport {dataGet} from \"../../components/GetData\"\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nclass User extends Component {\r\nconstructor(){\r\n  super();\r\n  this.state={\r\n    user:[]\r\n  }\r\n}\r\n\r\n  componentDidMount(){\r\n    dataGet('/user/'+localStorage.getItem(\"userId\"))\r\n    .then(response=>{\r\n      this.setState({\r\n        user: response\r\n      });\r\n      console.log(this.state.user)\r\n    }\r\n    )\r\n  }\r\n\r\nrender(){\r\n  return (\r\n    \r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n              <div className=\"col-md-12\" >\r\n\r\n            <div className=\"card\">\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">Edit Profile</h4>\r\n                <p className=\"card-category\">Complete your profile</p>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form>\r\n                    <div className=\"row ml-auto\">\r\n                      <div className=\"col-md-6 \">\r\n                        <div className=\"form-group\" style={{marginTop:\"30px\",display:\"flex\",justifyContent:\"flex-start\",marginLeft:\"-2%\",flexDirection:\"column\"}} >\r\n                          <label>Company (disabled)</label>\r\n                          <input type=\"text\" className=\"form-control\" disabled /><br/>\r\n                        </div>\r\n                        <div  className=\"form-group\" style={{marginTop:\"30px\",display:\"flex\",justifyContent:\"flex-start\",marginLeft:\"-2%\",flexDirection:\"column\"}} >\r\n                          <label >FullName</label>\r\n                          <input type=\"text\" className=\"form-control\" value={this.state.user.fullName}/><br/>\r\n                        </div>\r\n                        </div>\r\n                      <div style={{marginTop:\"20px\"}} className=\"col-md-6\">\r\n                       <Image className=\"img\" src={this.state.user.profilePicPath} rounded />\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"form-group\" style={{marginTop:\"30px\",display:\"flex\",justifyContent:\"flex-start\",marginLeft:\"-2%\",flexDirection:\"column\"}} >\r\n                          <label>Email address</label>\r\n                          <input type=\"email\" className=\"form-control\" value={this.state.user.emailId}/>\r\n                          <br />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"form-group\" style={{marginTop:\"30px\",display:\"flex\",justifyContent:\"flex-start\",marginLeft:\"-2%\"}} >\r\n                          <label>Contact No.</label>\r\n                          <input type=\"number\" className=\"form-control\" value={this.state.user.phoneNumber} />\r\n                          <br />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                     <div className=\"row \" style={{marginLeft:\"-1%\"}}>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                          <label>Address</label>\r\n                          <input type=\"text\" className=\"form-control\" value={this.state.user.streetAddress}/><br/>\r\n                        </div>\r\n                      </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group\">\r\n                        <label>City</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.user.city} />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group\">\r\n                        <label>State</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.user.state}/>\r\n                        <br />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group\">\r\n                        <label>Country</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.user.country} />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group\">\r\n                        <label>Postal Code</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.user.pincode}/>\r\n                        <br />\r\n                      </div>\r\n                    </div>\r\n\r\n                    </div>\r\n                      <div className=\"clearfix\" />\r\n                    <button type=\"submit\" className=\"btn btn-primary pull-right\">Update Profile</button>\r\n                  </form>\r\n            </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n   </div>\r\n  \r\n\r\n  );\r\n}\r\n}\r\n\r\nexport default User;\r\n","import React, { Componenet, Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Chart from \"react-apexcharts\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { dataGet } from \"../../components/GetData\";\r\nimport User from './User.js';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link} from 'react-router-dom';\r\n\r\nclass MonthChart extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      responses: [],\r\n      status: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    dataGet(\r\n      \"/report/surveyResponse?format=month&userId=\" +\r\n        localStorage.getItem(\"userId\")\r\n    ).then(response => {\r\n      console.log(response);\r\n      this.setState({\r\n        responses: response\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    var chartResponse = [];\r\n    var labels = [];\r\n    var statusResponse=[];\r\n    var months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\"\r\n    ];\r\n\r\n    console.log(Object.values(this.state.responses));\r\n    this.state.responses.forEach(res => {\r\n      chartResponse.push({\r\n        name: Object.keys(res),\r\n        data: Object.values(res[Object.keys(res)])\r\n      });\r\n      var objects = [];\r\n      objects.push(Object.keys(res[Object.keys(res)]));\r\n      objects.forEach(obj => {\r\n        obj.forEach(value => {\r\n          if (!labels.includes(months[parseInt(value)-1])) {\r\n            labels.push(months[parseInt(value) - 1]);\r\n          } else {\r\n            console.log(\"Already Present\");\r\n          }\r\n        });\r\n      });\r\n    });\r\n    this.state.status.forEach(res=>{\r\n      statusResponse.push({\r\n          name:Object.keys(res),\r\n          data:Object.values(res[Object.keys(res)])\r\n      })\r\n  })\r\n\r\n\r\n  \r\n\r\n    var responseChartData = {\r\n      options: {\r\n        xaxis: {\r\n          categories: labels\r\n        },\r\n        dataLabels: {\r\n          enabled: true\r\n        },\r\n        markers: {\r\n          size: 1\r\n        }\r\n      },\r\n\r\n      series: chartResponse\r\n    };\r\n\r\n \r\n\r\n    return (\r\n      <Router>\r\n      <div>\r\n        \r\n        <Row>\r\n          <Card className=\"col-md-12\">\r\n            <Card.Header className=\"text-right\">\r\n              <p></p>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Chart\r\n                options={responseChartData.options}\r\n                series={responseChartData.series}\r\n                type=\"bar\"\r\n              />\r\n              <center>\r\n              <button >\r\n  No. of Responses recoorded\r\n</button>\r\n              </center>\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n        <Switch>\r\n          <Route path=\"/user\">\r\n            <User/>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default MonthChart;\r\n","import React, {Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Chart from \"react-apexcharts\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { dataGet } from \"../../components/GetData\";\r\n\r\nclass StatusChart extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      responses: [],\r\n      status: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    dataGet(\"/report/response/status/\" + localStorage.getItem(\"userId\")).then(\r\n      response => {\r\n        this.setState({\r\n          status: response\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    var statusResponse=[];\r\n    this.state.status.forEach(res=>{\r\n        statusResponse.push({\r\n            name:Object.keys(res),\r\n            data:Object.values(res[Object.keys(res)])\r\n        })\r\n    })\r\n\r\n    var statusChartData={\r\n        options: {\r\n        xaxis: {\r\n          categories: [\"Approved\",\"Rejected\",\"Pending\",\"Corrections\"]\r\n        },\r\n        dataLabels: {\r\n          enabled: true\r\n        },\r\n        markers: {\r\n          size: 1\r\n        }\r\n      },\r\n\r\n      series:statusResponse\r\n\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        \r\n        <Row>\r\n          <Card className=\"col-md-12\">\r\n            <Card.Header className=\"text-right\">\r\n              <p></p>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Chart\r\n                options={statusChartData.options}\r\n                series={statusChartData.series}\r\n                type=\"area\"\r\n              />\r\n              <center>\r\n\r\n              <button >\r\n              Responses on basis of Status\r\n</button>\r\n              \r\n              </center>\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default StatusChart;\r\n","import React,{Component} from 'react';\r\nimport MonthChart from './MonthChart';\r\nimport StatusChart from './StatusChart.js';\r\nimport { dataGet } from '../../components/GetData.js';\r\n\r\n\r\n\r\nclass  Dashboard extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      data:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    dataGet('/report/count?format=date&userId='+localStorage.getItem('userId'))\r\n    .then(response=>{\r\n      this.setState({\r\n        data:response\r\n      },\r\n      console.log(this.state.data)\r\n      )\r\n    })\r\n  }\r\n  \r\n  \r\n  render(){\r\n    return (\r\n    <div className=\"content\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n              <div className=\"card card-stats\">\r\n                <div className=\"card-header card-header-warning card-header-icon\">\r\n                  <div className=\"card-icon\">\r\n                  <i class=\"material-icons\">\r\n                            check_circle\r\n                  </i>\r\n                  </div>\r\n                  <p className=\"card-category\">Live Surveys</p>\r\n                  <h3 className=\"card-title\">{this.state.data.liveCount}\r\n                  </h3>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n              <div className=\"card card-stats\">\r\n                <div className=\"card-header card-header-success card-header-icon\">\r\n                  <div className=\"card-icon\">\r\n                    <i className=\"material-icons\">store</i>\r\n                  </div>\r\n                  <p className=\"card-category\">Draft Surveys</p>\r\n                  <h3 className=\"card-title\">{this.state.data.draftCount}</h3>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n              <div className=\"card card-stats\">\r\n                <div className=\"card-header card-header-danger card-header-icon\">\r\n                  <div className=\"card-icon\">\r\n                    <i className=\"material-icons\">info_outline</i>\r\n                  </div>\r\n                  <p className=\"card-category\">Responses Captured</p>\r\n                  <h3 className=\"card-title\">{this.state.data.responseCount}</h3>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-3 col-md-6 col-sm-6\">\r\n              <div className=\"card card-stats\">\r\n                <div className=\"card-header card-header-info card-header-icon\">\r\n                  <div className=\"card-icon\">\r\n                    <i className=\"fa fa-twitter\" />\r\n                  </div>\r\n                  <p className=\"card-category\">Total Surveys</p>\r\n                  <h3 className=\"card-title\">{this.state.data.liveCount+this.state.data.draftCount}</h3>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\"  >\r\n            <div className=\"col-md-5\" style={{marginRight:\"5%\",marginLeft:\"6%\"}} >\r\n              \r\n                \r\n                 \r\n                  <MonthChart/>\r\n           \r\n                \r\n            </div>\r\n            \r\n            <div className=\"col-md-5\"style={{marginRight:\"5%\"}}>\r\n              \r\n                  <StatusChart/>\r\n            </div>\r\n                \r\n             {/* <div className=\"col-md-6\">\r\n              <div className=\"card card-chart\">\r\n                <div className=\"card-header card-header-danger\">\r\n                  <div className=\"ct-chart\" id=\"completedTasksChart\" />\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">Completed Tasks</h4>\r\n                  <p className=\"card-category\">Last Campaign Performance</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <div className=\"stats\">\r\n                    <i className=\"material-icons\">access_time</i> campaign sent 2 days ago\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport { dataGet } from \"./GetData\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport Rating from \"react-rating\";\r\n\r\nclass ResponseDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      response: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    dataGet(\r\n      \"/response/details/\" + this.props.location.state.data[0].responseId\r\n    ).then(res => {\r\n      this.setState({\r\n        response: res\r\n      });\r\n    });\r\n  }\r\n\r\n  renderSwitch(params) {\r\n    switch (params.question.itemType.code) {\r\n      case \"Media\":\r\n        return (\r\n          <Card style={{ width: \"600px\", height: \"350px\" }}>\r\n            <Card.Body>\r\n              <TransformWrapper>\r\n                <TransformComponent>\r\n                  <img\r\n                    style={{ width: \"550px\", height: \"300px\" }}\r\n                    src={params.responseItem}\r\n                    alt=\"test\"\r\n                  />\r\n                </TransformComponent>\r\n              </TransformWrapper>\r\n            </Card.Body>\r\n          </Card>\r\n        );\r\n\r\n      case \"Text\":\r\n        return (\r\n          <Card>\r\n            <Card.Body>{params.responseItem}</Card.Body>\r\n          </Card>\r\n        );\r\n\r\n      case \"Number\":\r\n        return (\r\n          <Card>\r\n            <Card.Body>{params.responseItem}</Card.Body>\r\n          </Card>\r\n        );\r\n\r\n      case \"Email\":\r\n        return (\r\n          <Card>\r\n            <Card.Body>{params.responseItem}</Card.Body>\r\n          </Card>\r\n        );\r\n\r\n      case \"Rating\":\r\n        return (\r\n          <Card>\r\n            <Card.Body>\r\n              <Rating\r\n                emptySymbol=\"fa fa-star-o fa-2x\"\r\n                fullSymbol=\"fa fa-star fa-2x\"\r\n                initalRating={params.responseItem}\r\n                readonly\r\n              />\r\n              />\r\n            </Card.Body>\r\n          </Card>\r\n        );\r\n\r\n      case \"Signature\":\r\n        return (\r\n          <Card>\r\n            <Card.Body>\r\n              <img\r\n                style={{ width: \"550px\", height: \"300px\" }}\r\n                src={params.responseItem}\r\n                alt=\"test\"\r\n              />\r\n            </Card.Body>\r\n          </Card>\r\n        );\r\n\r\n      default:\r\n        return <div>No response recorded</div>;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4\r\n                    className=\"card-title\"\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      fontSize: \"25px\"\r\n                    }}\r\n                  >\r\n                    <strong>Responses</strong>\r\n                  </h4>\r\n                  <p className=\"card-text\">\r\n                    {\" \"}\r\n                    <ul>\r\n                      {this.state.response.map(res => {\r\n                        return (\r\n                          <li key={res.responseItem}>\r\n                            <h5>\r\n                              <b>\r\n                                {\" \"}\r\n                                {\"Q.\"} {JSON.parse(res.question.item).title}\r\n                              </b>\r\n                            </h5>\r\n                            <br />\r\n                            {this.renderSwitch(res)}\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ResponseDetails;\r\n","import React, { Component } from \"react\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { dataGet } from \"./GetData\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport class ResponseTable extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      responses: [],\r\n      questions: [],\r\n      questionIds: [],\r\n      columns: [\r\n        {\r\n          name: \"responseId\",\r\n          label: \"ResponseId\",\r\n          options: {\r\n            filter: true,\r\n            sort: true,\r\n            display: false\r\n          }\r\n        },\r\n        \"UserId\",\r\n        \"Questions Answered\"\r\n      ],\r\n      isLoading: true,\r\n      answers: [],\r\n      rowData: [],\r\n      toDetail: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    dataGet(\"/response/survey/\"+this.props.location.state.survey.id).then(res => {\r\n      this.setState({\r\n        responses: res\r\n      });\r\n    });\r\n    this.state.questionIds = this.props.location.state.survey.questionIdList;\r\n\r\n    this.props.location.state.survey.questionIdList.map(questionId => {\r\n      dataGet(\"/question/\" + questionId).then(que => {\r\n        this.state.columns.push(\"Q.\" + JSON.parse(que.item).title);\r\n      });\r\n    });\r\n    console.log(this.state.columns);\r\n  }\r\n\r\n  getDetail(params) {\r\n    console.log(params);\r\n    this.setState({\r\n      rowData: params,\r\n      toDetail: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.toDetail) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/responseDetails\",\r\n            state: {\r\n              data: this.state.rowData\r\n            }\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    const data = [];\r\n\r\n    this.state.responses.map(res => {\r\n      const object = [];\r\n      var id = {\r\n        responseId: res.id\r\n      };\r\n      object.push(\r\n        id,\r\n        res.userId,\r\n        res.data.length +\r\n          \"/\" +\r\n          this.props.location.state.survey.questionIdList.length\r\n      );\r\n\r\n      this.state.questionIds.forEach(questionId => {\r\n        const val = res.data.filter(res => res.questionId == questionId);\r\n        if (val.length > 0) {\r\n          object.push(val[0].responseItem);\r\n        } else {\r\n          object.push(\"-\");\r\n        }\r\n      });\r\n      data.push(object);\r\n    });\r\n\r\n    const options = {\r\n      filterType: \"dropdown\",\r\n      responsive: \"scroll\",\r\n      onRowClick: rowData => this.getDetail(rowData),\r\n      onRowsDelete: false,\r\n      disableToolbarSelect: true\r\n    };\r\n\r\n    return (\r\n      <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n     \r\n        <MUIDataTable\r\n          style={{ marginTop: \"40%\" }}\r\n          title={\"Responses\"}\r\n          data={data}\r\n          columns={this.state.columns}\r\n          options={options}\r\n        />\r\n     \r\n      </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default ResponseTable;\r\n","import React, { Fragment } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Page from \"./components/Page.js\";\r\nimport Home from \"./components/Home\";\r\nimport CreateSurvey from \"./components/CreateSurvey\";\r\nimport Dashboard from './componentss/dashboard/Dashboard.js';\r\nimport User from './componentss/dashboard/User.js';\r\nimport {Nav} from 'react-bootstrap';\r\nimport ResponseDetails from './components/ResponseDetails.js';\r\nimport PreviewSurvey from './componentss/Preview/PreviewSurvey.js'\r\n\r\n\r\nimport ResponseTable from \"./components/ResponseTable\";\r\n\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    var navBar;\r\n    if (localStorage.getItem(\"userId\")) {\r\n      navBar = (\r\n        <div\r\n          className=\"sidebar\"\r\n          data-color=\"purple\"\r\n          data-background-color=\"white\"\r\n          data-image=\"assets/img/bg2.jpg\"\r\n        >\r\n          <div className=\"logo\">\r\n            <Nav.Link href=\"/dashboard\" className=\"simple-text logo-normal\">\r\n              Survey Glance\r\n            </Nav.Link>\r\n          </div>\r\n          <div className=\"sidebar-wrapper\">\r\n            <ul className=\"nav\">\r\n              <li className=\"nav-item\">\r\n                <Nav.Link href=\"/dashboard\">\r\n                  <i className=\"material-icons\">dashboard</i>\r\n                  <p>Dashboard</p>\r\n                </Nav.Link>\r\n              </li>\r\n              <li className=\"nav-item \">\r\n                <Nav.Link className=\"nav-link\" href=\"/user\">\r\n                  <i className=\"material-icons\">person</i>\r\n                  <p>User</p>\r\n                </Nav.Link>\r\n              </li>\r\n              <li className=\"nav-item \">\r\n                <Nav.Link className=\"nav-link\" href=\"/home\">\r\n                  <i className=\"material-icons\">content_paste</i>\r\n                  <p>Forms</p>\r\n                </Nav.Link>\r\n              </li>\r\n              <li className=\"nav-item \" onClick={()=>localStorage.clear()}>\r\n                <Nav.Link className=\"nav-link\" href=\"/login\">\r\n                  <i className=\"material-icons\">power_settings_new</i>\r\n                  <p>Logout</p>\r\n                </Nav.Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      navBar = <div></div>;\r\n    }\r\n    return (\r\n      <Fragment>\r\n\r\n        {navBar}\r\n        <Router basename={'/New_Dashboard'}>\r\n          <div className=\"main-panel\">\r\n            <Route exact path=\"/login\" component={Page} />\r\n            <Route exact path=\"/home\" component={Home} />\r\n            <Route exact path=\"/createSurvey\" component={CreateSurvey} />\r\n            <Route exact path=\"/\" component={Page} />\r\n            <Route path=\"/dashboard\" component={Dashboard} />\r\n            <Route exact path=\"/user\" component={User} />\r\n            <Route exact path=\"/response\" component={ResponseTable}/>\r\n           <Route exact path=\"/responseDetails\" component={ResponseDetails}/>\r\n           <Route exact path=\"/preview\" component={PreviewSurvey}/>\r\n          </div>\r\n        </Router>\r\n      </Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}